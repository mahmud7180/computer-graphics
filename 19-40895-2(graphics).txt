
#include <windows.h>  // for MS Windows
#include <GL/glut.h>  // GLUT, include glu.h and gl.h
#include<math.h>>
# define PI           3.14159265358979323846


void display1() {
	glClearColor(1.0f, 1.0f, 1.0f, 1.0f);
    glClear(GL_COLOR_BUFFER_BIT);

    glLineWidth(1);



glBegin(GL_QUADS);//1st
glColor3ub(204,230,255);
glVertex2f(1.0f,0.5f);
glVertex2f(1.0f,1.0f);
glVertex2f(-1.0f,1.0f);
glVertex2f(-1.0f,0.5f);
glEnd();

glBegin(GL_QUADS);//2nd
glColor3ub(230,243,255);
glVertex2f(1.0f,0.5f);
glVertex2f(-1.0f,0.5f);
glVertex2f(-1.0f,-0.3f);
glVertex2f(1.0f,-0.3f);
glEnd();

glBegin(GL_QUADS);//3rd
glColor3ub(166,166,166);
glVertex2f(1.0f,-0.3f);
glVertex2f(-1.0f,-0.3f);
glVertex2f(-1.0f,-0.6f);
glVertex2f(1.0f,-0.6f);
glEnd();

glBegin(GL_QUADS);//4th
glColor3ub(128,128,128);
glVertex2f(1.0f,-0.6f);
glVertex2f(-1.0f,-0.6f);
glVertex2f(-1.0f,-1.0f);
glVertex2f(1.0f,-1.0f);
glEnd();



	int i;//sun
    glColor3ub(255,255,0);
	GLfloat x=.6f; GLfloat y=.6f; GLfloat radius =.2f;
	int triangleAmount = 20; //# of triangles used to draw circle

	//GLfloat radius = 0.8f; //radius
	GLfloat twicePi = 2.0f * PI;

	glBegin(GL_TRIANGLE_FAN);
		glVertex2f(x, y); // center of circle
		for(i = 0; i <= triangleAmount;i++) {
			glVertex2f(
		            x + (radius * cos(i *  twicePi / triangleAmount)),
			    y + (radius * sin(i * twicePi / triangleAmount))
			);
		}
	glEnd();


	glBegin(GL_QUADS);//1st building
glColor3ub(253,204,0);
glVertex2f(0.4f,-0.3f);
glVertex2f(0.4f,0.0f);
glVertex2f(-0.1f,0.0f);
glVertex2f(-0.1f,-0.3f);
glEnd();

glBegin(GL_QUADS);//2nd building
glColor3ub(255,255,255);
glVertex2f(-0.1f,0.2f);
glVertex2f(-0.5f,0.2f);
glVertex2f(-0.5f,-0.3f);
glVertex2f(-0.1f,-0.3f);
glEnd();

glBegin(GL_QUADS);//3nd building
glColor3ub(204,153,0);
glVertex2f(-0.5f,0.3f);
glVertex2f(-0.8f,0.3f);
glVertex2f(-0.8f,-0.3f);
glVertex2f(-0.5f,-0.3f);
glEnd();

glBegin(GL_QUADS);//tower pillar
glColor3ub(255,136,77);
glVertex2f(-0.2f,-0.3f);
glVertex2f(-0.2f,0.4f);
glVertex2f(-0.3f,0.4f);
glVertex2f(-0.3f,-0.3f);
glEnd();

glBegin(GL_QUADS);//tower 1st floor
glColor3ub(255,102,102);
glVertex2f(-0.17f,0.4f);
glVertex2f(-0.15f,0.46f);
glVertex2f(-0.35f,0.46f);
glVertex2f(-0.33f,0.4f);
glEnd();

glBegin(GL_QUADS);//tower 2nd floor
glColor3ub(26,26,255);
glVertex2f(-0.15f,0.46f);
glVertex2f(-0.14f,0.48f);
glVertex2f(-0.36f,0.48f);
glVertex2f(-0.35f,0.46f);
glEnd();

glBegin(GL_QUADS);//tower 3nd floor
glColor3ub(255,0,255);
glVertex2f(-0.14f,0.48f);
glVertex2f(-0.13f,0.52f);
glVertex2f(-0.37f,0.52f);
glVertex2f(-0.36f,0.48f);
glEnd();















	glFlush();
}

int main(int argc, char** argv) {
	glutInit(&argc, argv);
	glutCreateWindow("Test");
	glutInitWindowSize(320, 320);
	glutDisplayFunc(display1);
	glutMainLoop();
	return 0;
}

